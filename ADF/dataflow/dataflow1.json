{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Airlines",
						"type": "DatasetReference"
					},
					"name": "Airlines"
				},
				{
					"dataset": {
						"referenceName": "Airports",
						"type": "DatasetReference"
					},
					"name": "Airports"
				},
				{
					"dataset": {
						"referenceName": "Flights",
						"type": "DatasetReference"
					},
					"name": "Flights"
				}
			],
			"sinks": [
				{
					"name": "SQLServerDB"
				}
			],
			"transformations": [
				{
					"name": "LookupAirlinesAndAirports"
				},
				{
					"name": "LookupFlightsAndAirlines"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Sort1"
				}
			],
			"script": "source(output(\n\t\tIATACODE as string,\n\t\tAIRLINE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Airlines\nsource(output(\n\t\tIATA_CODE as string,\n\t\tAIRPORT as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tCOUNTRY as string,\n\t\tLATITUDE as string,\n\t\tLONGITUDE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Airports\nsource(output(\n\t\tYEAR as string,\n\t\tMONTH as string,\n\t\tDAY as string,\n\t\tDAY_OF_WEEK as string,\n\t\tAIRLINE as string,\n\t\tFLIGHT_NUMBER as string,\n\t\tTAIL_NUMBER as string,\n\t\tORIGIN_AIRPORT as string,\n\t\tDESTINATION_AIRPORT as string,\n\t\tSCHEDULED_DEPARTURE as string,\n\t\tDEPARTURE_TIME as string,\n\t\tDEPARTURE_DELAY as string,\n\t\tTAXI_OUT as string,\n\t\tWHEELS_OFF as string,\n\t\tSCHEDULED_TIME as string,\n\t\tELAPSED_TIME as string,\n\t\tAIR_TIME as string,\n\t\tDISTANCE as string,\n\t\tWHEELS_ON as string,\n\t\tTAXI_IN as string,\n\t\tSCHEDULED_ARRIVAL as string,\n\t\tARRIVAL_TIME as string,\n\t\tARRIVAL_DELAY as string,\n\t\tDIVERTED as string,\n\t\tCANCELLED as string,\n\t\tCANCELLATION_REASON as string,\n\t\tAIR_SYSTEM_DELAY as string,\n\t\tSECURITY_DELAY as string,\n\t\tAIRLINE_DELAY as string,\n\t\tLATE_AIRCRAFT_DELAY as string,\n\t\tWEATHER_DELAY as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Flights\nAirlines, Airports lookup(IATACODE == IATA_CODE,\n\tmultiple: true,\n\tbroadcast: 'none')~> LookupAirlinesAndAirports\nFlights, Airlines lookup(Flights@AIRLINE == Airlines@AIRLINE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupFlightsAndAirlines\nLookupAirlinesAndAirports, LookupFlightsAndAirlines join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 filter(ERROR_FUNCTION('')) ~> Filter1\nFilter1 sort(asc(ERROR_FUNCTION(''), true)) ~> Sort1\nSort1 sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SQLServerDB"
		}
	}
}